{"number":"381","title":"Insert Delete GetRandom O(1) - Duplicates allowed","url":"https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed","difficulty":"Hard","question":"Design a data structure that supports all following operations in average O(1) time.\nNote: Duplicate elements are allowed.\n\n\ninsert(val): Inserts an item val to the collection.\nremove(val): Removes an item val from the collection if present.\ngetRandom: Returns a random element from current collection of elements. The probability of each element being returned is linearly related to the number of same value the collection contains.\n\n\n\nExample:\n// Init an empty collection.\nRandomizedCollection collection = new RandomizedCollection();\n\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\ncollection.insert(1);\n\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\ncollection.insert(1);\n\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\ncollection.insert(2);\n\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\ncollection.getRandom();\n\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\ncollection.remove(1);\n\n// getRandom should return 1 and 2 both equally likely.\ncollection.getRandom();\n\n","code":"undefinedpublic class RandomizedCollection {​    /** Initialize your data structure here. */    public RandomizedCollection() {            }        /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */    public bool Insert(int val) {            }        /** Removes a value from the collection. Returns true if the collection contained the specified element. */    public bool Remove(int val) {            }        /** Get a random element from the collection. */    public int GetRandom() {            }}​/** * Your RandomizedCollection object will be instantiated and called as such: * RandomizedCollection obj = new RandomizedCollection(); * bool param_1 = obj.Insert(val); * bool param_2 = obj.Remove(val); * int param_3 = obj.GetRandom(); */"}