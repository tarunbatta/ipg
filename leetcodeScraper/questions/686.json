{"number":"686","title":"Repeated String Match","url":"https://leetcode.com/problems/repeated-string-match","difficulty":"Easy","question":"Given two strings A and B, find the minimum number of times A has to be repeated such that B is a substring of it. If no such solution, return -1.\n\nFor example, with A = &quot;abcd&quot; and B = &quot;cdabcdab&quot;.\n\nReturn 3, because by repeating A three times (&#x201C;abcdabcdabcd&#x201D;), B is a substring of it; and B is not a substring of A repeated two times (&quot;abcdabcd&quot;).\n\nNote:\nThe length of A and B will be between 1 and 10000.\n","code":"undefinedpublic class Solution {    public int RepeatedStringMatch(string A, string B) {            }}"}