{"number":"529","title":"Minesweeper","url":"https://leetcode.com/problems/minesweeper","difficulty":"Medium","question":"Let&apos;s play the minesweeper game (Wikipedia, online game)!\n\nYou are given a 2D char matrix representing the game board. &apos;M&apos; represents an unrevealed mine, &apos;E&apos; represents an unrevealed empty square, &apos;B&apos; represents a revealed blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, digit (&apos;1&apos; to &apos;8&apos;) represents how many mines are adjacent to this revealed square, and finally &apos;X&apos; represents a revealed mine.\n\nNow given the next click position (row and column indices) among all the unrevealed squares (&apos;M&apos; or &apos;E&apos;), return the board after revealing this position according to the following rules:\n\n\n\tIf a mine (&apos;M&apos;) is revealed, then the game is over - change it to &apos;X&apos;.\n\tIf an empty square (&apos;E&apos;) with no adjacent mines is revealed, then change it to revealed blank (&apos;B&apos;) and all of its adjacent unrevealed squares should be revealed recursively.\n\tIf an empty square (&apos;E&apos;) with at least one adjacent mine is revealed, then change it to a digit (&apos;1&apos; to &apos;8&apos;) representing the number of adjacent mines.\n\tReturn the board when no more squares will be revealed.\n\n\n&#xA0;\n\nExample 1:\n\nInput: \n\n[[&apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;],\n [&apos;E&apos;, &apos;E&apos;, &apos;M&apos;, &apos;E&apos;, &apos;E&apos;],\n [&apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;],\n [&apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;, &apos;E&apos;]]\n\nClick : [3,0]\n\nOutput: \n\n[[&apos;B&apos;, &apos;1&apos;, &apos;E&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;M&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;]]\n\nExplanation:\n\n\n\nExample 2:\n\nInput: \n\n[[&apos;B&apos;, &apos;1&apos;, &apos;E&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;M&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;]]\n\nClick : [1,2]\n\nOutput: \n\n[[&apos;B&apos;, &apos;1&apos;, &apos;E&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;X&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;B&apos;],\n [&apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;, &apos;B&apos;]]\n\nExplanation:\n\n\n\n&#xA0;\n\nNote:\n\n\n\tThe range of the input matrix&apos;s height and width is [1,50].\n\tThe click position will only be an unrevealed square (&apos;M&apos; or &apos;E&apos;), which also means the input board contains at least one clickable square.\n\tThe input board won&apos;t be a stage when game is over (some mines have been revealed).\n\tFor simplicity, not mentioned rules should be ignored in this problem. For example, you don&apos;t need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.\n\n","code":"undefinedpublic class Solution {    public char[][] UpdateBoard(char[][] board, int[] click) {            }}"}