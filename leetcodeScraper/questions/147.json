{"number":"147","title":"Insertion Sort List","url":"https://leetcode.com/problems/insertion-sort-list","difficulty":"Medium","question":"Sort a linked list using insertion sort.\n\n\n\n\n\nA graphical example of insertion sort. The partial sorted list (black) initially contains only the first element in the list.\nWith each iteration one element (red) is removed from the input data and inserted in-place into the sorted list\n&#xA0;\n\n\n\n\nAlgorithm of Insertion Sort:\n\n\n\tInsertion sort iterates, consuming one input element each repetition, and growing a sorted output list.\n\tAt each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there.\n\tIt repeats until no input elements remain.\n\n\n\nExample 1:\n\nInput: 4-&gt;2-&gt;1-&gt;3\nOutput: 1-&gt;2-&gt;3-&gt;4\n\n\nExample 2:\n\nInput: -1-&gt;5-&gt;3-&gt;4-&gt;0\nOutput: -1-&gt;0-&gt;3-&gt;4-&gt;5\n\n","code":"undefined/** * Definition for singly-linked list. * public class ListNode { *     public int val; *     public ListNode next; *     public ListNode(int x) { val = x; } * } */public class Solution {    public ListNode InsertionSortList(ListNode head) {            }}"}