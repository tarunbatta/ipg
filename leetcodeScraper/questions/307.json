{"number":"307","title":"Range Sum Query - Mutable","url":"https://leetcode.com/problems/range-sum-query-mutable","difficulty":"Medium","question":"Given an integer array nums, find the sum of the elements between indices i and j (i &#x2264; j), inclusive.\n\nThe update(i, val) function modifies nums by updating the element at index i to val.\n\nExample:\n\nGiven nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n\n\nNote:\n\n\n\tThe array is only modifiable by the update function.\n\tYou may assume the number of calls to update and sumRange function is distributed evenly.\n\n","code":"undefinedpublic class NumArray {​    public NumArray(int[] nums) {            }        public void Update(int i, int val) {            }        public int SumRange(int i, int j) {            }}​/** * Your NumArray object will be instantiated and called as such: * NumArray obj = new NumArray(nums); * obj.Update(i,val); * int param_2 = obj.SumRange(i,j); */"}