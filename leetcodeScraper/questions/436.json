{"number":"436","title":"Find Right Interval","url":"https://leetcode.com/problems/find-right-interval","difficulty":"Medium","question":"Given a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the &quot;right&quot; of i.\n\nFor any interval i, you need to store the minimum interval j&apos;s index, which means that the interval j has the minimum start point to build the &quot;right&quot; relationship for interval i. If the interval j doesn&apos;t exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.\n\nNote:\n\n\n\tYou may assume the interval&apos;s end point is always bigger than its start point.\n\tYou may assume none of these intervals have the same start point.\n\n\n&#xA0;\n\nExample 1:\n\nInput: [ [1,2] ]\n\nOutput: [-1]\n\nExplanation: There is only one interval in the collection, so it outputs -1.\n\n\n&#xA0;\n\nExample 2:\n\nInput: [ [3,4], [2,3], [1,2] ]\n\nOutput: [-1, 0, 1]\n\nExplanation: There is no satisfied &quot;right&quot; interval for [3,4].\nFor [2,3], the interval [3,4] has minimum-&quot;right&quot; start point;\nFor [1,2], the interval [2,3] has minimum-&quot;right&quot; start point.\n\n\n&#xA0;\n\nExample 3:\n\nInput: [ [1,4], [2,3], [3,4] ]\n\nOutput: [-1, 2, -1]\n\nExplanation: There is no satisfied &quot;right&quot; interval for [1,4] and [3,4].\nFor [2,3], the interval [3,4] has minimum-&quot;right&quot; start point.\n\n\nNOTE:&#xA0;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.\n","code":"undefinedpublic class Solution {    public int[] FindRightInterval(int[][] intervals) {            }}"}