{"number":"126","title":"Word Ladder II","url":"https://leetcode.com/problems/word-ladder-ii","difficulty":"Hard","question":"Given two words (beginWord and endWord), and a dictionary&apos;s word list, find all shortest transformation sequence(s) from beginWord to endWord, such that:\n\n\n\tOnly one letter can be changed at a time\n\tEach transformed word must exist in the word list. Note that beginWord is not a transformed word.\n\n\nNote:\n\n\n\tReturn an empty list if there is no such transformation sequence.\n\tAll words have the same length.\n\tAll words contain only lowercase alphabetic characters.\n\tYou may assume no duplicates in the word list.\n\tYou may assume beginWord and endWord are non-empty and are not the same.\n\n\nExample 1:\n\nInput:\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\nOutput:\n[\n  [&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],\n&#xA0; [&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n]\n\n\nExample 2:\n\nInput:\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\nOutput: []\n\nExplanation:&#xA0;The endWord &quot;cog&quot; is not in wordList, therefore no possible&#xA0;transformation.\n\n\n\n\n","code":"public class Solution {    public IList<IList<string>> FindLadders(string beginWord, string endWord, IList<string> wordList) {            }}"}