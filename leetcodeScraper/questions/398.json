{"number":"398","title":"Random Pick Index","url":"https://leetcode.com/problems/random-pick-index","difficulty":"Medium","question":"Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\n\nNote:\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\n\nExample:\n\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(3);\n\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(1);\n\n","code":"undefinedpublic class Solution {​    public Solution(int[] nums) {            }        public int Pick(int target) {            }}​/** * Your Solution object will be instantiated and called as such: * Solution obj = new Solution(nums); * int param_1 = obj.Pick(target); */"}