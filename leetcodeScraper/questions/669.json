{"number":"669","title":"Trim a Binary Search Tree","url":"https://leetcode.com/problems/trim-a-binary-search-tree","difficulty":"Easy","question":"\nGiven a binary search tree and the lowest and highest boundaries as L and R, trim the tree so that all its elements lies in [L, R] (R &gt;= L). You might need to change the root of the tree, so the result should return the new root of the trimmed binary search tree.\n\n\nExample 1:\nInput: \n    1\n   / \\\n  0   2\n\n  L = 1\n  R = 2\n\nOutput: \n    1\n      \\\n       2\n\n\n\nExample 2:\nInput: \n    3\n   / \\\n  0   4\n   \\\n    2\n   /\n  1\n\n  L = 1\n  R = 3\n\nOutput: \n      3\n     / \n   2   \n  /\n 1\n\n","code":"undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public TreeNode TrimBST(TreeNode root, int L, int R) {            }}"}