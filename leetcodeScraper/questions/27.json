{"number":"27","title":"Remove Element","url":"https://leetcode.com/problems/remove-element","difficulty":"Easy","question":"Given an array nums and a value val, remove all instances of that value in-place and return the new length.\n\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\n\nThe order of elements can be changed. It doesn&apos;t matter what you leave beyond the new length.\n\nExample 1:\n\nGiven nums = [3,2,2,3], val = 3,\n\nYour function should return length = 2, with the first two elements of nums being 2.\n\nIt doesn&apos;t matter what you leave beyond the returned length.\n\n\nExample 2:\n\nGiven nums = [0,1,2,2,3,0,4,2], val = 2,\n\nYour function should return length = 5, with the first five elements of nums containing&#xA0;0, 1, 3, 0, and&#xA0;4.\n\nNote that the order of those five elements can be arbitrary.\n\nIt doesn&apos;t matter what values are set beyond&#xA0;the returned length.\n\nClarification:\n\nConfused why the returned value is an integer but your answer is an array?\n\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\n\nInternally you can think of this:\n\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeElement(nums, val);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i &lt; len; i++) {\n&#xA0; &#xA0; print(nums[i]);\n}\n","code":"public class Solution {    public int RemoveElement(int[] nums, int val) {            }}"}