{"number":"565","title":"Array Nesting","url":"https://leetcode.com/problems/array-nesting","difficulty":"Medium","question":"A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.\n\nSuppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]&#x2026; By that analogy, we stop adding right before a duplicate element occurs in S.\n\n&#xA0;\n\nExample 1:\n\nInput: A = [5,4,0,3,1,6,2]\nOutput: 4\nExplanation: \nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\n\nOne of the longest S[K]:\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\n\n\n&#xA0;\n\nNote:\n\n\n\tN is an integer within the range [1, 20,000].\n\tThe elements of A are all distinct.\n\tEach element of A is an integer within the range [0, N-1].\n\n","code":"undefinedpublic class Solution {    public int ArrayNesting(int[] nums) {            }}"}