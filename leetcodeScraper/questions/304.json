{"number":"304","title":"Range Sum Query 2D - Immutable","url":"https://leetcode.com/problems/range-sum-query-2d-immutable","difficulty":"Medium","question":"Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\n\n\nThe above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and (row2, col2) = (4, 3), which contains sum = 8.\n\n\nExample:\nGiven matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -&gt; 8\nsumRegion(1, 1, 2, 2) -&gt; 11\nsumRegion(1, 2, 2, 4) -&gt; 12\n\n\n\nNote:\n\nYou may assume that the matrix does not change.\nThere are many calls to sumRegion function.\nYou may assume that row1 &#x2264; row2 and col1 &#x2264; col2.\n\n","code":"undefinedpublic class NumMatrix {​    public NumMatrix(int[][] matrix) {            }        public int SumRegion(int row1, int col1, int row2, int col2) {            }}​/** * Your NumMatrix object will be instantiated and called as such: * NumMatrix obj = new NumMatrix(matrix); * int param_1 = obj.SumRegion(row1,col1,row2,col2); */"}