{"number":"435","title":"Non-overlapping Intervals","url":"https://leetcode.com/problems/non-overlapping-intervals","difficulty":"Medium","question":"Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n\n\n\n\n&#xA0;\n\nExample 1:\n\nInput: [[1,2],[2,3],[3,4],[1,3]]\nOutput: 1\nExplanation: [1,3] can be removed and the rest of intervals are non-overlapping.\n\n\nExample 2:\n\nInput: [[1,2],[1,2],[1,2]]\nOutput: 2\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\n\n\nExample 3:\n\nInput: [[1,2],[2,3]]\nOutput: 0\nExplanation: You don&apos;t need to remove any of the intervals since they&apos;re already non-overlapping.\n\n\n&#xA0;\n\nNote:\n\n\n\tYou may assume the interval&apos;s end point is always bigger than its start point.\n\tIntervals like [1,2] and [2,3] have borders &quot;touching&quot; but they don&apos;t overlap each other.\n\n","code":"undefinedpublic class Solution {    public int EraseOverlapIntervals(int[][] intervals) {            }}"}