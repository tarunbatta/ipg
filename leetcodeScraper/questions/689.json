{"number":"689","title":"Maximum Sum of 3 Non-Overlapping Subarrays","url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","difficulty":"Hard","question":"In a given array nums of positive integers, find three non-overlapping subarrays with maximum sum.\n\nEach subarray will be of size k, and we want to maximize the sum of all 3*k entries.\n\nReturn the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.\n\nExample:\n\nInput: [1,2,1,2,6,7,5,1], 2\nOutput: [0, 3, 5]\nExplanation: Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\n\n\n&#xA0;\n\nNote:\n\n\n\tnums.length will be between 1 and 20000.\n\tnums[i] will be between 1 and 65535.\n\tk will be between 1 and floor(nums.length / 3).\n\n\n&#xA0;\n","code":"undefinedpublic class Solution {    public int[] MaxSumOfThreeSubarrays(int[] nums, int k) {            }}"}