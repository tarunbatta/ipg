{"number":"482","title":"License Key Formatting","url":"https://leetcode.com/problems/license-key-formatting","difficulty":"Easy","question":"You are given a license key represented as a string S which consists only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.\n\nGiven a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the first group which could be shorter than K, but still must contain at least one character. Furthermore, there must be a dash inserted between two groups and all lowercase letters should be converted to uppercase.\n\nGiven a non-empty string S and a number K, format the string according to the rules described above.\n\nExample 1:\nInput: S = &quot;5F3Z-2e-9-w&quot;, K = 4\n\nOutput: &quot;5F3Z-2E9W&quot;\n\nExplanation: The string S has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.\n\n\n\n\nExample 2:\nInput: S = &quot;2-5g-3-J&quot;, K = 2\n\nOutput: &quot;2-5G-3J&quot;\n\nExplanation: The string S has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.\n\n\n\nNote:\n\nThe length of string S will not exceed 12,000, and K is a positive integer.\nString S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).\nString S is non-empty.\n\n","code":"undefinedpublic class Solution {    public string LicenseKeyFormatting(string S, int K) {            }}"}