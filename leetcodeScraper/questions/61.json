{"number":"61","title":"Rotate List","url":"https://leetcode.com/problems/rotate-list","difficulty":"Medium","question":"Given a linked&#xA0;list, rotate the list to the right by k places, where k is non-negative.\n\nExample 1:\n\nInput: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, k = 2\nOutput: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\nExplanation:\nrotate 1 steps to the right: 5-&gt;1-&gt;2-&gt;3-&gt;4-&gt;NULL\nrotate 2 steps to the right: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n\n\nExample 2:\n\nInput: 0-&gt;1-&gt;2-&gt;NULL, k = 4\nOutput: 2-&gt;0-&gt;1-&gt;NULL\nExplanation:\nrotate 1 steps to the right: 2-&gt;0-&gt;1-&gt;NULL\nrotate 2 steps to the right: 1-&gt;2-&gt;0-&gt;NULL\nrotate 3 steps to the right:&#xA0;0-&gt;1-&gt;2-&gt;NULL\nrotate 4 steps to the right:&#xA0;2-&gt;0-&gt;1-&gt;NULL\n","code":"/** * Definition for singly-linked list. * public class ListNode { *     public int val; *     public ListNode next; *     public ListNode(int x) { val = x; } * } */public class Solution {    public ListNode RotateRight(ListNode head, int k) {            }}"}