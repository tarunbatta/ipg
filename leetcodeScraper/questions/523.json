{"number":"523","title":"Continuous Subarray Sum","url":"https://leetcode.com/problems/continuous-subarray-sum","difficulty":"Medium","question":"Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of k, that is, sums up to n*k where n is also an integer.\n\n&#xA0;\n\nExample 1:\n\nInput: [23, 2, 4, 6, 7],  k=6\nOutput: True\nExplanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\n\n\nExample 2:\n\nInput: [23, 2, 6, 4, 7],  k=6\nOutput: True\nExplanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\n\n\n&#xA0;\n\nNote:\n\n\n\tThe length of the array won&apos;t exceed 10,000.\n\tYou may assume the sum of all the numbers is in the range of a signed 32-bit integer.\n\n","code":"undefinedpublic class Solution {    public bool CheckSubarraySum(int[] nums, int k) {            }}"}