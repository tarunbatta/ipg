{"number":"310","title":"Minimum Height Trees","url":"https://leetcode.com/problems/minimum-height-trees","difficulty":"Medium","question":"For an undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs). Given such a graph, write a function to find all the MHTs and return a list of their root labels.\n\nFormat\nThe graph contains n nodes which are labeled from 0 to n - 1. You will be given the number n and a list of undirected edges (each edge is a pair of labels).\n\nYou can assume that no duplicate edges will appear in edges. Since all edges are undirected, [0, 1] is the same as [1, 0] and thus will not appear together in edges.\n\nExample 1 :\n\nInput: n = 4, edges = [[1, 0], [1, 2], [1, 3]]\n\n        0\n        |\n        1\n       / \\\n      2   3 \n\nOutput: [1]\n\n\nExample 2 :\n\nInput: n = 6, edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]\n\n     0  1  2\n      \\ | /\n        3\n        |\n        4\n        |\n        5 \n\nOutput: [3, 4]\n\nNote:\n\n\n\tAccording to the definition of tree on Wikipedia: &#x201C;a tree is an undirected graph in which any two vertices are connected by exactly one path. In other words, any connected graph without simple cycles is a tree.&#x201D;\n\tThe height of a rooted tree is the number of edges on the longest downward path between the root and a leaf.\n\n","code":"undefinedpublic class Solution {    public IList<int> FindMinHeightTrees(int n, int[][] edges) {            }}"}