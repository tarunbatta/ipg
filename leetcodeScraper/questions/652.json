{"number":"652","title":"Find Duplicate Subtrees","url":"https://leetcode.com/problems/find-duplicate-subtrees","difficulty":"Medium","question":"Given a binary tree, return all duplicate subtrees. For each kind of duplicate subtrees, you only need to return the root node of any one of them.\n\nTwo trees are duplicate if they have the same structure with same node values.\n\nExample 1: \n\n        1\n       / \\\n      2   3\n     /   / \\\n    4   2   4\n       /\n      4\n\n\nThe following are two duplicate subtrees:\n\n      2\n     /\n    4\n\n\nand\n\n    4\n\nTherefore, you need to return above trees&apos; root in the form of a list.","code":"undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public IList<TreeNode> FindDuplicateSubtrees(TreeNode root) {            }}"}