{"number":"98","title":"Validate Binary Search Tree","url":"https://leetcode.com/problems/validate-binary-search-tree","difficulty":"Medium","question":"Given a binary tree, determine if it is a valid binary search tree (BST).\n\nAssume a BST is defined as follows:\n\n\n\tThe left subtree of a node contains only nodes with keys less than the node&apos;s key.\n\tThe right subtree of a node contains only nodes with keys greater than the node&apos;s key.\n\tBoth the left and right subtrees must also be binary search trees.\n\n\n&#xA0;\n\nExample 1:\n\n    2\n   / \\\n  1   3\n\nInput:&#xA0;[2,1,3]\nOutput: true\n\n\nExample 2:\n\n    5\n   / \\\n  1   4\n&#xA0;    / \\\n&#xA0;   3   6\n\nInput: [5,1,4,null,null,3,6]\nOutput: false\nExplanation: The root node&apos;s value is 5 but its right child&apos;s value is 4.\n\n","code":"/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public bool IsValidBST(TreeNode root) {            }}"}