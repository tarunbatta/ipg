{"number":"598","title":"Range Addition II","url":"https://leetcode.com/problems/range-addition-ii","difficulty":"Easy","question":"Given an m * n matrix M initialized with all 0&apos;s and several update operations.\nOperations are represented by a 2D array, and each operation is represented by an array with two positive integers a and b, which means M[i][j] should be added by one for all 0 &lt;= i &lt; a and 0 &lt;= j &lt; b. \nYou need to count and return the number of maximum integers in the matrix after performing all the operations.\n\nExample 1:\nInput: \nm = 3, n = 3\noperations = [[2,2],[3,3]]\nOutput: 4\nExplanation: \nInitially, M = \n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n\nAfter performing [2,2], M = \n[[1, 1, 0],\n [1, 1, 0],\n [0, 0, 0]]\n\nAfter performing [3,3], M = \n[[2, 2, 1],\n [2, 2, 1],\n [1, 1, 1]]\n\nSo the maximum integer in M is 2, and there are four of it in M. So return 4.\n\n\n\nNote:\n\nThe range of m and n is [1,40000].\nThe range of a is [1,m], and the range of b is [1,n].\nThe range of operations size won&apos;t exceed 10,000.\n\n","code":"undefinedpublic class Solution {    public int MaxCount(int m, int n, int[][] ops) {            }}"}