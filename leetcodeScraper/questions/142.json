{"number":"142","title":"Linked List Cycle II","url":"https://leetcode.com/problems/linked-list-cycle-ii","difficulty":"Medium","question":"Given a linked list, return the node where the cycle begins. If there is no cycle, return null.\n\nTo represent a cycle in the given linked list, we use an integer pos which represents the position (0-indexed)&#xA0;in the linked list where tail connects to. If pos is -1, then there is no cycle in the linked list.\n\nNote: Do not modify the linked list.\n\n&#xA0;\n\nExample 1:\n\nInput: head = [3,2,0,-4], pos = 1\nOutput: tail connects to node index 1\nExplanation: There is a cycle in the linked list, where tail connects to the second node.\n\n\n\n\nExample 2:\n\nInput: head = [1,2], pos = 0\nOutput: tail connects to node index 0\nExplanation: There is a cycle in the linked list, where tail connects to the first node.\n\n\n\n\nExample 3:\n\nInput: head = [1], pos = -1\nOutput: no cycle\nExplanation: There is no cycle in the linked list.\n\n\n\n\n&#xA0;\n\nFollow-up:\nCan you solve it without using extra space?\n","code":"undefined/** * Definition for singly-linked list. * public class ListNode { *     public int val; *     public ListNode next; *     public ListNode(int x) { *         val = x; *         next = null; *     } * } */public class Solution {    public ListNode DetectCycle(ListNode head) {            }}"}